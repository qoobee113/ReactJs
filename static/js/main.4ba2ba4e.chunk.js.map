{"version":3,"sources":["constans/actionTypes.js","logo.svg","components/Menu/Menu.js","routes.js","components/Loading/Loading.js","App.js","serviceWorker.js","reducers/Product/products.js","reducers/Product/itemEditing.js","reducers/Task/task.js","reducers/Task/isDisplayForm.js","reducers/Task/updateTask.js","reducers/Task/fillterTable.js","reducers/Task/searchTask.js","reducers/Task/sortTask.js","reducers/index.js","index.js"],"names":["FETCH_PRODUCT","ADD_PRODUCT","UPDATE_PRODUCT","DELETE_PRODUCT","EDIT_PRODUCT","LIST_ALL","SAVE_TASK","TOGGLE_FORM","CLOSE_FORM","OPEN_FORM","UPDATE_STATUS_TASK","DELETE_TASK","EDIT_TASK","RESET_TASK_EDIT","FILLTER_TABLE","SEARCH_TASK","SORT_TASK","module","exports","menus","name","to","exact","MenuLink","label","activeOnlyWhenExact","path","children","active","match","className","Menu","showMenu","result","length","map","menu","index","key","this","Component","HomePage","lazy","NotFoundPage","ProductListPage","ProductActionPage","TaskPage","routes","main","history","Loading","src","logo","alt","App","showCotent","route","component","fallback","Boolean","window","location","hostname","initState","findIndex","arr","id","forEach","element","myReducer","state","action","product","type","Types","products","push","price","status","splice","data","JSON","parse","localStorage","getItem","s4","Math","floor","random","toString","substring","generateID","task","types","newTask","setItem","stringify","fillter","parseInt","keyWord","by","value","sort","myReducers","combineReducers","item","isDisplayForm","updateTask","fillterTable","search","sortTask","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4ba2ba4e.chunk.js","sourcesContent":["export const FETCH_PRODUCT ='FETCH_PRODUCT';\nexport const ADD_PRODUCT ='ADD_PRODUCT';\nexport const UPDATE_PRODUCT ='UPDATE_PRODUCT';\nexport const DELETE_PRODUCT ='DELETE_PRODUCT';\nexport const EDIT_PRODUCT = 'EDIT_PRODUCT';\nexport const LIST_ALL = 'LIST_ALL';\nexport const SAVE_TASK = 'SAVE_TASK';\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\nexport const CLOSE_FORM = 'CLOSE_FORM';\nexport const OPEN_FORM = 'OPEN_FORM';\nexport const UPDATE_STATUS_TASK = 'UPDATE_STATUS_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const EDIT_TASK ='EDIT_TASK';\nexport const RESET_TASK_EDIT = 'RESET_TASK_EDIT';\nexport const FILLTER_TABLE = 'FILLTER_TABLE';\nexport const SEARCH_TASK = 'SEARCH_TASK';\nexport const SORT_TASK ='SORT_TASK';","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{ Component } from 'react';\nimport { Route , Link } from 'react-router-dom';\n\nconst menus = [\n  {\n    name : 'Trang chủ',\n    to : '/',\n    exact : true\n  },\n  {\n    name : 'Quản lý sản phẩm',\n    to : '/product-list',\n    exact : false\n  },\n  {\n    name : 'Quản lý công việc',\n    to: '/task-list',\n    exact : false\n  }\n];\n const MenuLink = ({ label , to , activeOnlyWhenExact}) =>{\n   return <Route\n            path = {to}\n            exact = { activeOnlyWhenExact }\n            children = {({match}) => {\n              let active = match ? 'active' : '';\n              return (\n                <li className= { active }>\n                    <Link to ={ to }>\n                        {label}\n                    </Link>\n                </li>\n              )\n            } }\n          />\n }\n\nclass Menu extends Component {\n  showMenu = (menus) =>{\n    let result = null;\n    if(menus.length > 0){\n      result = menus.map((menu,index) => {\n      return(  <MenuLink \n          key ={ index } \n          label ={ menu.name } \n          to ={ menu.to} \n          activeOnlyWhenExact = {menu.exact}\n        />) ;\n      })\n    }\n    return result;\n  }\n  render()\n  {\n    return (   \n        <div className=\"navbar navbar-default\">\n          <Link className=\"navbar-brand\" to='/'>Call API</Link>\n          <ul className=\"nav navbar-nav\">\n            { this.showMenu(menus) }\n          </ul>\n        </div>        \n      );\n  }\n}\n\nexport default Menu;\n","import React,{ lazy } from 'react';\nconst HomePage = lazy(() => import ('./pages/HomePage/HomePage'));\nconst NotFoundPage = lazy(() => import ('./pages/NotFound/NotFoundPage'));\nconst ProductListPage = lazy( () => import('./pages/ProductListPage/ProductListPage'));\nconst ProductActionPage = lazy( () => import ('./pages/ProductActionPage/ProductActionPage'));\nconst TaskPage = lazy ( () => import ('./pages/Task/TaskPage'));\n\nconst routes = [\n    {\n        path : '/',\n        exact : true,\n        main : () => <HomePage />\n    },\n    {\n        path : '/reactjs',\n        exact : false,\n        main : () => <HomePage />\n    },\n    {\n        path : '/product-list',\n        exact : false,\n        main : () => <ProductListPage />\n    },\n    {\n        path : '/product/add',\n        exact : false,\n        main : ({history}) => <ProductActionPage history = {history} />\n    },\n    {\n        path : '/product/edit/:id',\n        exact : false,\n        main : ({match,history}) => <ProductActionPage match = { match } history = {history}/>\n    },\n    {\n        path : '/task-list/',\n        exact : false,\n        main : ({match,history}) => <TaskPage match = { match } history = {history}/>\n    },\n    {\n        path : '',\n        exact : false,\n        main : () => <NotFoundPage />\n    }\n];\nexport default routes;","import React,{ Component } from 'react';\nimport logo  from './../../logo.svg';\n\n\nexport default class Loading extends Component {\n    render(){\n        return (   \n            <div className=\"App\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                        Loading...\n              </p>\n            </header>\n          </div>\n        );\n    }\n}","import React,{ Component, Suspense } from 'react';\nimport Menu from './components/Menu/Menu';\nimport routes from './routes';\nimport Loading from './components/Loading/Loading';\nimport './App.css';\nimport { Route, Switch,BrowserRouter as Router } from 'react-router-dom';\n\nclass App extends Component {\n\n  showCotent =(routes) =>{\n    let result = null;\n    if(routes.length > 0){\n      result = routes.map((route ,index) => {\n        return <Route \n                key = {index} \n                path={route.path}\n                exact = { route.exact }\n                component = { route.main }\n                />\n      })\n    }\n    return <Switch>{result}</Switch>\n  }\n  render()\n  {\n    return (   \n      <Router>\n      <Suspense fallback={<Loading/>}>\n      <div> \n        <Menu /> \n            { this.showCotent(routes) }            \n      </div>\n      </Suspense>\n      </Router>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n"," import * as Types from '../../constans/actionTypes';\n \n let initState = [];\n let findIndex = (arr,id) =>{\n    let result = -1;\n    arr.forEach( (element,index) => {\n        if(element.id === id ){\n            result = index;\n        }\n    });\n    return result;\n}\n let myReducer = ( state = initState , action) =>{\n     let index = -1;\n     let { product } = action;\n     switch (action.type){\n        case Types.FETCH_PRODUCT :\n            state = action.products;\n            return [...state];\n        case Types.ADD_PRODUCT:\n            state.push(action.product)\n            return [...state];\n        case Types.UPDATE_PRODUCT :\n            index =findIndex(state,product.id);\n            state[index] = {\n                ...state[index],\n                id : product.id,\n                name : product.name,\n                price : product.price,\n                status : product.status\n            }\n            return [...state];\n        case Types.DELETE_PRODUCT :\n            index = findIndex(state,action.id);\n            state.splice(index,1);\n            return [...state];\n         default : return state;\n     }\n }\n export default myReducer;","import * as Types from '../../constans/actionTypes';\n\nlet initState = {\n    id:'',\n    name : '',\n    price : '',\n    status : true\n};\n\nconst myReducer = (state = initState , action) =>{\n    switch (action.type){\n        case Types.EDIT_PRODUCT:\n            state = action.product;\n            return {...state};\n        default: return state;\n    }\n}\n\nexport default myReducer;\n","import * as types from './../../constans/actionTypes';\n\nlet data = JSON.parse (localStorage.getItem('task'));\n\n\nlet initState = data ? [...data] : [] ;\n\nlet s4 = () => {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n}\n\nlet generateID = () => {\n    return s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() ;\n}\nlet findIndex = (task,id) => {\n    let result = -1;\n    task.forEach( (element,index) => {\n      if(element.id === id ){\n        result = index;\n      }\n    });\n    return result;\n  }\n\nlet myReducer = (state = initState , action) =>{\n    let index = -1;\n    switch(action.type){\n        case types.LIST_ALL :\n            return state;\n        case types.SAVE_TASK :\n            if(action.task.id)\n            {\n                index = findIndex(state,action.task.id);\n                state[index] ={\n                ...state[index],\n                id : action.task.id,\n                name : action.task.name,\n                status : action.task.status\n                }\n            }else{\n                let newTask = {\n                    id : generateID(),\n                    name : action.task.name,\n                    status : action.task.status\n                }\n                state.push(newTask);\n            }\n            localStorage.setItem('task',JSON.stringify(state));\n            return [...state ];\n        case types.UPDATE_STATUS_TASK :\n            index = findIndex(state,action.id);\n            state[index] ={\n                ...state[index],\n                status : !state[index].status\n            }\n            localStorage.setItem('task',JSON.stringify(state));\n            return [...state];\n        case types.DELETE_TASK : \n            index = findIndex(state,action.id)\n            state.splice(index,1);\n            localStorage.setItem('task',JSON.stringify(state));\n            return [...state];\n        default : return state;\n    }\n}\n\nexport default myReducer;","import * as types from './../../constans/actionTypes';\n\nlet initState = false ; // default : close form\n\nlet myReducer = (state = initState , action) =>{\n    switch(action.type){\n        case types.TOGGLE_FORM :\n            return !state;\n        case types.OPEN_FORM :\n            return true;\n        case types.CLOSE_FORM :\n            return false;\n        default : return state;\n    }\n}\n\nexport default myReducer;","import * as types from './../../constans/actionTypes';\n\nlet initState = {\n    id : '',\n    name: '',\n    status : true\n} ; //\n\nlet myReducer = (state = initState , action) =>{\n    switch(action.type){\n        case types.EDIT_TASK :\n            return action.task;\n        case types.RESET_TASK_EDIT:\n            return state = {\n                ...state,\n                id : '',\n                name : '',\n                status : true\n            }\n        default : return state;\n    }\n}\n\nexport default myReducer;","import * as types from './../../constans/actionTypes';\n\nlet initState = {\n    name : '',\n    status : -1 // -1 : tất cả , \n} ; //\n\nlet myReducer = (state = initState , action) =>{\n    switch(action.type){\n        case types.FILLTER_TABLE :\n            action.fillter.status = parseInt(action.fillter.status,10);\n            return action.fillter;\n        default : return state;\n    }\n}\n\nexport default myReducer;","import * as types from './../../constans/actionTypes';\n\nlet initState = '' ; // default : close form\n\nlet myReducer = (state = initState , action) =>{\n    switch(action.type){\n        case types.SEARCH_TASK :\n            return action.keyWord;\n        default : return state;\n    }\n}\n\nexport default myReducer;","import * as types from './../../constans/actionTypes';\n\nlet initState = {\n    by : \"name\",\n    value : -1\n} ;\n\nlet myReducer = (state = initState , action) =>{\n    switch(action.type){\n        case types.SORT_TASK :\n            state.by = action.sort.by;\n            state.value = parseInt(action.sort.value,10)\n            return { ...state };\n        default : return state;\n    }\n}\n\nexport default myReducer;","import { combineReducers } from 'redux';\nimport products from './Product/products';\nimport item from './Product/itemEditing';\nimport task from './Task/task';\nimport isDisplayForm from './Task/isDisplayForm';\nimport updateTask from './Task/updateTask';\nimport fillterTable from './Task/fillterTable'\nimport search from './Task/searchTask';\nimport sortTask from './Task/sortTask';\n\nconst myReducers = combineReducers({\n    products : products,\n    item : item,\n    task : task,\n    isDisplayForm : isDisplayForm,\n    updateTask : updateTask ,\n    fillterTable : fillterTable,\n    search : search,\n    sort : sortTask\n});\nexport default myReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore,applyMiddleware,compose } from 'redux';\nimport myReducer from './reducers/index';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  myReducer,\n  composeEnhancer(applyMiddleware(thunk)),\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}