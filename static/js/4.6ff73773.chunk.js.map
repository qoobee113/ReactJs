{"version":3,"sources":["constans/config.js","utills/apiCaller.js","actions/index.js","pages/ProductActionPage/ProductActionPage.js"],"names":["API_URL","callAPI","endpoint","method","body","axios","url","config","data","catch","err","console","log","actFetchProductRequest","dispatch","then","res","actFetchProduct","products","type","types","actDeleteProductRequest","id","actDeleteProduct","addProductReq","product","name","txtName","price","txtPrice","status","chkbStatus","addProduct","getProductReq","getProduct","updateProductReq","updateProduct","saveTask","task","toggleForm","openForm","closeForm","updateStatus","deleteTask","editTask","resetTaskEdit","fillterTable","fillter","searchTask","keyWord","sortTask","valueSearch","sort","ProductActionPage","props","onChange","e","target","value","checked","setState","onSave","preventDefault","state","history","onUpdateProduct","goBack","onAddProduct","match","this","params","funcItemEditing","prevProps","prevState","itemEditing","tittle","className","onSubmit","to","Component","connect","item","action"],"mappings":"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","file":"static/js/4.6ff73773.chunk.js","sourcesContent":["export const API_URL = 'https://5f90439fe0559c0016ad65b1.mockapi.io/';","import axios from 'axios';\nimport * as config from './../constans/config';\n\nexport default function callAPI(endpoint, method = 'GET',body){\n    return axios({\n        method : method,\n        url : `${config.API_URL}/${endpoint}`,\n        data : body\n    }).catch(err =>{\n       console.log(err);\n    });\n}","import * as types from './../constans/actionTypes';\nimport callAPI from './../utills/apiCaller';\n\nexport const actFetchProductRequest = () =>{\n    return (dispatch) =>{\n        return callAPI('products','GET',null).then(res => {\n            dispatch(actFetchProduct(res.data));\n        }).catch(err=>{\n            console.log(err);\n        })\n    }\n};\nexport const actFetchProduct = (products) =>{\n    return {\n        type : types.FETCH_PRODUCT,\n        products\n    }\n}\n//Delete\nexport const actDeleteProductRequest = (id) =>{\n    return (dispatch) =>{\n        return callAPI(`products/${id}`,'DELETE',null).then(res => {\n            if(res)\n            {\n                dispatch(actDeleteProduct(res.data.id));\n            }\n        }).catch(err=>{\n            console.log(err);\n        })\n    }\n};\n\nexport const actDeleteProduct = (id) =>{\n    return {\n        type : types.DELETE_PRODUCT,\n        id\n    }\n}\n\n//Add\nexport const addProduct = (product) =>{\n    return {\n        type : types.ADD_PRODUCT,\n        product\n    }\n}\n\nexport const addProductReq = (product) =>{\n    return (dispatch) =>{\n        return callAPI(`products/`,'POST',{\n            name : product.txtName,\n            price : product.txtPrice,\n            status : product.chkbStatus\n        }).then(res => {\n            if(res)\n            {\n                dispatch(addProduct(res.data));\n            }\n        }).catch(err=>{\n            console.log(err);\n        })\n    }\n}\n//Edit product to save\nexport const getProductReq = (id) =>{\n    return (dispatch) =>{\n        return callAPI(`products/${id}`,'GET',null).then(res => {\n            if(res)\n            {\n                dispatch(getProduct(res.data));\n            }\n        }).catch(err=>{\n            console.log(err);\n        })\n    }\n}\nexport const getProduct = (product) =>{\n    return {\n        type : types.EDIT_PRODUCT,\n        product\n    }\n} \n\n//update item\nexport const updateProduct = (product) => {\n    return {\n        type : types.UPDATE_PRODUCT,\n        product\n\n    }\n}\n\nexport const updateProductReq = (product) => {\n    return (dispatch) =>{\n        return callAPI(`products/${product.id}`,'PUT',product).then(res => {\n            if(res)\n            {\n                console.log(res.data);\n                dispatch(updateProduct(res.data));\n            }\n        }).catch(err=>{\n            console.log(err);\n        })\n    }\n}\n\n//Task - list\nexport const listAll = () => {\n    return {\n        type : types.LIST_ALL\n    }\n}\n\nexport const saveTask = (task) =>{\n    return {\n        type : types.SAVE_TASK,\n        task : task\n    }\n}\n\nexport const toggleForm = () =>{\n    return {\n        type : types.TOGGLE_FORM\n    }\n}\nexport const openForm = () =>{\n    return {\n        type : types.OPEN_FORM\n    }\n}\nexport const closeForm = () =>{\n    return {\n        type : types.CLOSE_FORM\n    }\n}\n\nexport const updateStatus = (id) =>{\n    return {\n        type :  types.UPDATE_STATUS_TASK,\n        id : id\n    }\n}\nexport const deleteTask = (id) =>{\n    return {\n        type :  types.DELETE_TASK,\n        id : id\n    }\n}\nexport const editTask = (task) =>{\n    return {\n        type : types.EDIT_TASK,\n        task : task\n    }\n}\n\nexport const resetTaskEdit = () =>{\n    return {\n        type : types.RESET_TASK_EDIT\n    }\n}\n\nexport const fillterTable = (fillter) =>{\n    return {\n        type : types.FILLTER_TABLE,\n        fillter : fillter\n    }\n}\n\nexport const searchTask = (keyWord) =>{\n    return {\n        type : types.SEARCH_TASK,\n        keyWord : keyWord\n    }\n}\nexport const sortTask = (valueSearch) =>{\n    return {\n        type : types.SORT_TASK,\n        sort : valueSearch\n    }\n\n}","import React,{ Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as action from './../../actions/index';\n\nclass ProductActionPage extends Component {\n\n    constructor(props){\n        super(props);\n        this.state ={\n            id : null,\n            txtName : '',\n            txtPrice : '',\n            chkbStatus : true\n        }\n    }\n\n    componentDidMount(){\n        let { match } = this.props;\n        if(match){\n            let { id } = match.params;\n            this.props.funcItemEditing(id);              \n        }\n    }\n    componentDidUpdate(prevProps,prevState){\n        if(this.props.itemEditing && this.state === prevState){\n            let { itemEditing } = this.props\n            this.setState({\n                id : itemEditing.id,\n                txtName : itemEditing.name,\n                txtPrice : itemEditing.price,\n                chkbStatus : itemEditing.status\n            });\n        }\n    }\n    onChange = (e) =>{\n        let { target } = e;\n        let { name } = target;\n        let value = target.type ==='checkbox' ? target.checked : target.value;\n        this.setState({\n            [name] : value\n        })\n    }\n\n    onSave = e =>{\n        e.preventDefault();\n        let { id,txtName,txtPrice,chkbStatus } = this.state;\n        let { history } =  this.props ;\n        if(id){\n            this.props.onUpdateProduct({\n                id : id,\n                name : txtName,\n                price : txtPrice,\n                status : chkbStatus\n            })\n            history.goBack();\n        }\n        else{\n            this.props.onAddProduct(this.state);\n            history.goBack();\n        }\n    }\n  render()\n  {\n    let tittle = this.state.id ? 'Sửa sản phẩm' : 'Thêm sản phẩm';\n    return ( \n        <div className =\"container\" > \n        <div className=\"row\">\n            \n            <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\n                \n            </div>\n            \n            <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">               \n                <form onSubmit = { this.onSave }>\n                    <legend>{ tittle }</legend>              \n                    <div className=\"form-group\">\n                        <label >Tên sản phẩm </label>\n                        <input type=\"text\" className=\"form-control\" name ='txtName'\n                        value = { this.state.txtName || ''}\n                        onChange = { this.onChange }\n                        />\n                    </div> \n                    <div className=\"form-group\">\n                        <label>Giá </label>\n                        <input type=\"number\" className=\"form-control\" name=\"txtPrice\" \n                        value = { this.state.txtPrice || ''}\n                        onChange = { this.onChange }\n                        />\n                    </div>     \n                    <div className=\"form-group\">\n                        <label>Trạng thái </label>                        \n                    </div>                    \n                    <div className=\"checkbox\">\n                        <label>\n                            <input type=\"checkbox\" name=\"chkbStatus\"\n                            checked = { this.state.chkbStatus }\n                            onChange = { this.onChange }\n                            />\n                            Còn hàng\n                        </label>\n                    </div>                                    \n                    <button type=\"submit\" className=\"btn btn-primary mr-10\">Lưu lại</button>\n                    <Link to=\"/product-list\" className=\"btn btn-primary\"> Trở lại </Link>\n                </form>\n                </div>\n            </div>     \n        </div>    \n      );\n  }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        itemEditing : state.item\n    }\n}\nconst mapDispatchToProps = (dispatch, props) =>{\n    return {\n        onAddProduct :  (product) =>{\n            dispatch(action.addProductReq(product))\n        },\n        funcItemEditing : (id) =>{\n            dispatch(action.getProductReq(id))\n        },\n        onUpdateProduct : (product) =>{\n            dispatch(action.updateProductReq(product))\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps) (ProductActionPage);\n"],"sourceRoot":""}