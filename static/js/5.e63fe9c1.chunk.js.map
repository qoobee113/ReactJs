{"version":3,"sources":["constans/config.js","utills/apiCaller.js","actions/index.js","pages/ProductListPage/ProductListPage.js"],"names":["API_URL","callAPI","endpoint","method","body","axios","url","config","data","catch","err","console","log","actFetchProductRequest","dispatch","then","res","actFetchProduct","products","type","types","actDeleteProductRequest","id","actDeleteProduct","addProductReq","product","name","txtName","price","txtPrice","status","chkbStatus","addProduct","getProductReq","getProduct","updateProductReq","updateProduct","saveTask","task","toggleForm","openForm","closeForm","updateStatus","deleteTask","editTask","resetTaskEdit","fillterTable","fillter","searchTask","keyWord","sortTask","valueSearch","sort","Productlist","lazy","ProductItem","ProductListPage","onDelete","props","onDeleteProduct","showProduct","result","length","map","index","key","this","fetchOnProduct","className","to","Component","connect","state","action"],"mappings":"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","file":"static/js/5.e63fe9c1.chunk.js","sourcesContent":["export const API_URL = 'https://5f90439fe0559c0016ad65b1.mockapi.io/';","import axios from 'axios';\nimport * as config from './../constans/config';\n\nexport default function callAPI(endpoint, method = 'GET',body){\n    return axios({\n        method : method,\n        url : `${config.API_URL}/${endpoint}`,\n        data : body\n    }).catch(err =>{\n       console.log(err);\n    });\n}","import * as types from './../constans/actionTypes';\nimport callAPI from './../utills/apiCaller';\n\nexport const actFetchProductRequest = () =>{\n    return (dispatch) =>{\n        return callAPI('products','GET',null).then(res => {\n            dispatch(actFetchProduct(res.data));\n        }).catch(err=>{\n            console.log(err);\n        })\n    }\n};\nexport const actFetchProduct = (products) =>{\n    return {\n        type : types.FETCH_PRODUCT,\n        products\n    }\n}\n//Delete\nexport const actDeleteProductRequest = (id) =>{\n    return (dispatch) =>{\n        return callAPI(`products/${id}`,'DELETE',null).then(res => {\n            if(res)\n            {\n                dispatch(actDeleteProduct(res.data.id));\n            }\n        }).catch(err=>{\n            console.log(err);\n        })\n    }\n};\n\nexport const actDeleteProduct = (id) =>{\n    return {\n        type : types.DELETE_PRODUCT,\n        id\n    }\n}\n\n//Add\nexport const addProduct = (product) =>{\n    return {\n        type : types.ADD_PRODUCT,\n        product\n    }\n}\n\nexport const addProductReq = (product) =>{\n    return (dispatch) =>{\n        return callAPI(`products/`,'POST',{\n            name : product.txtName,\n            price : product.txtPrice,\n            status : product.chkbStatus\n        }).then(res => {\n            if(res)\n            {\n                dispatch(addProduct(res.data));\n            }\n        }).catch(err=>{\n            console.log(err);\n        })\n    }\n}\n//Edit product to save\nexport const getProductReq = (id) =>{\n    return (dispatch) =>{\n        return callAPI(`products/${id}`,'GET',null).then(res => {\n            if(res)\n            {\n                dispatch(getProduct(res.data));\n            }\n        }).catch(err=>{\n            console.log(err);\n        })\n    }\n}\nexport const getProduct = (product) =>{\n    return {\n        type : types.EDIT_PRODUCT,\n        product\n    }\n} \n\n//update item\nexport const updateProduct = (product) => {\n    return {\n        type : types.UPDATE_PRODUCT,\n        product\n\n    }\n}\n\nexport const updateProductReq = (product) => {\n    return (dispatch) =>{\n        return callAPI(`products/${product.id}`,'PUT',product).then(res => {\n            if(res)\n            {\n                console.log(res.data);\n                dispatch(updateProduct(res.data));\n            }\n        }).catch(err=>{\n            console.log(err);\n        })\n    }\n}\n\n//Task - list\nexport const listAll = () => {\n    return {\n        type : types.LIST_ALL\n    }\n}\n\nexport const saveTask = (task) =>{\n    return {\n        type : types.SAVE_TASK,\n        task : task\n    }\n}\n\nexport const toggleForm = () =>{\n    return {\n        type : types.TOGGLE_FORM\n    }\n}\nexport const openForm = () =>{\n    return {\n        type : types.OPEN_FORM\n    }\n}\nexport const closeForm = () =>{\n    return {\n        type : types.CLOSE_FORM\n    }\n}\n\nexport const updateStatus = (id) =>{\n    return {\n        type :  types.UPDATE_STATUS_TASK,\n        id : id\n    }\n}\nexport const deleteTask = (id) =>{\n    return {\n        type :  types.DELETE_TASK,\n        id : id\n    }\n}\nexport const editTask = (task) =>{\n    return {\n        type : types.EDIT_TASK,\n        task : task\n    }\n}\n\nexport const resetTaskEdit = () =>{\n    return {\n        type : types.RESET_TASK_EDIT\n    }\n}\n\nexport const fillterTable = (fillter) =>{\n    return {\n        type : types.FILLTER_TABLE,\n        fillter : fillter\n    }\n}\n\nexport const searchTask = (keyWord) =>{\n    return {\n        type : types.SEARCH_TASK,\n        keyWord : keyWord\n    }\n}\nexport const sortTask = (valueSearch) =>{\n    return {\n        type : types.SORT_TASK,\n        sort : valueSearch\n    }\n\n}","import React,{ Component,lazy } from 'react';\nimport { connect } from 'react-redux';\nimport * as action from './../../actions/index';\nimport { Link } from 'react-router-dom';\nconst Productlist = lazy(() => import('./../../components/Productlist/Productlist'));\nconst ProductItem = lazy(() => import('./../../components/ProductItem/ProductItem'));\n\n\nclass ProductListPage extends Component {\n\n    componentDidMount(){\n        this.props.fetchOnProduct();      \n    }\n    onDelete = (id) =>{\n        this.props.onDeleteProduct(id);\n    }\n\n    showProduct = (products) =>{\n        let result = null;\n        if(products.length > 0){\n            result = products.map((product,index) => {\n                return <ProductItem\n                        key = {index}\n                        product = { product }\n                        index = { index }\n                        onDelete = { this.onDelete }\n                        />\n            })\n        }\n        return result;\n    }\n\n  render()\n  {\n      let { products } = this.props ;\n    return ( \n        <div className = \"container\">\n            <div className=\"text-center\">\n                <h1>Danh sách sản phẩm</h1>\n                <hr/>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">     \n                  <Link to=\"/product/add\" className=\"btn btn-info mb-10\">Thêm sản phẩm</Link> \n                    <Productlist>      \n                    {\n                        this.showProduct(products)\n                    }\n                    </Productlist>                               \n                </div>\n            </div>    \n        </div>    \n      );\n  }\n}\nconst mapStateToProps = (state) =>{\n    return {\n        products : state.products\n    }\n}\nconst mapDispatchToProps = (dispatch, props) =>{\n    return {\n        fetchOnProduct : () =>{\n            dispatch(action.actFetchProductRequest());\n        },\n        onDeleteProduct : (id) =>{\n            dispatch(action.actDeleteProductRequest(id));\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps) (ProductListPage);\n"],"sourceRoot":""}